# injects a 120s pause in the recomendation service
experiment:
  responses:
    - frontend_traces:
        type: trace
        service_name: frontend 
        left_window: 240s 
        right_window: 240s 
        limit: 100000
    - recommendation_traces:
        type: trace
        service_name: recommendationservice 
        left_window: 240s 
        right_window: 240s 
        limit: 100000
    - system_CPU:
        type: metric
        metric_name: sum(rate(container_cpu_usage_seconds_total{container_label_com_docker_compose_project="opentelemetry-demo"}[1m]))
        left_window: 240s 
        right_window: 240s
        step: 1
    - recommendations_total:
        type: metric
        metric_name: increase(app_recommendations_counter_total[90s])
        left_window: 240s 
        right_window: 240s
        step: 1
  treatments:
    - packet_loss_treatment:
        action: pause
        params: {
          service_name: recommendation-service,
          duration: 120s,
        }
  sue:
    compose: opentelemetry-demo/docker-compose.yml
    exclude: [loadgenerator]
  loadgen:
    run_time: 10m
    stages: 
    - {duration: 600, users: 50, spawn_rate: 25}
    tasks:
    - { endpoint: /, verb: get, weight: 1, params: { } }
    - { endpoint: /api/products/0PUK6V6EV0, verb: get, weight: 10, params: { } }
    - { endpoint: /api/recommendations, verb: get, weight: 3, params: { "productIds": ["1YMWWN1N4O"]}}
    - { endpoint: /api/cart, verb: get, weight: 3, params: { } }
    - { endpoint: /api/data, verb: get, weight: 3, params: { "contextKeys": [ "accessories" ] } }
    - { endpoint: /api/cart, verb: post, weight: 2, params: { "item": {"productId":"6E92ZMYYFZ", "quantity":2, }, "userId":'ab2d0fc0-7224-11ec-8ef2-b658b885fb3',} }